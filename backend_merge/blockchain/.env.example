# BAFOKA Backend Environment Configuration Template
# Copy this file to .env and fill in your actual values

# ==========================================
# BLOCKCHAIN CONFIGURATION
# ==========================================

# Network Configuration
NETWORK=sepolia
CHAIN_ID=11155111
RPC_URL=https://eth-sepolia.g.alchemy.com/v2/DG7pse7fHQj0R5Rvp59ES

# Contract Configuration
CONTRACT_ADDRESS=0x814a8E397B8232DB74ccaEEF925632e05469dEdd
CONTRACT_ABI_PATH=./artifacts/contracts/TrocServiceBafoka.sol/TrocServiceBafoka.json

# API Keys
ALCHEMY_API_KEY=DG7pse7fHQj0R5Rvp59ES
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY_HERE

# Wallet Configuration (KEEP SECURE!)
DEPLOYER_PRIVATE_KEY=b4e8ba305bc57aee88693956c45954fa5541454a2f2f1b50ee0aadb68e528d33
DEPLOYER_ADDRESS=YOUR_WALLET_ADDRESS_HERE

# ==========================================
# WHATSAPP/TWILIO CONFIGURATION
# ==========================================

# Twilio WhatsApp API
TWILIO_ACCOUNT_SID=YOUR_TWILIO_ACCOUNT_SID_HERE
TWILIO_AUTH_TOKEN=YOUR_TWILIO_AUTH_TOKEN_HERE
TWILIO_WHATSAPP_NUMBER=whatsapp:+14155238886

# WhatsApp Business API (Optional)
WHATSAPP_BUSINESS_PHONE_ID=YOUR_PHONE_ID_HERE
WHATSAPP_ACCESS_TOKEN=YOUR_ACCESS_TOKEN_HERE
WHATSAPP_WEBHOOK_VERIFY_TOKEN=YOUR_WEBHOOK_TOKEN_HERE

# ==========================================
# DATABASE CONFIGURATION
# ==========================================

# PostgreSQL Database
DATABASE_URL=postgresql://username:password@localhost:5432/bafoka_db
DB_HOST=localhost
DB_PORT=5432
DB_NAME=bafoka_db
DB_USER=username
DB_PASSWORD=password

# Redis Cache
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# ==========================================
# APPLICATION CONFIGURATION
# ==========================================

# Server Configuration
PORT=3000
NODE_ENV=development
API_VERSION=v1

# Security
JWT_SECRET=your_super_secure_jwt_secret_key_here
WEBHOOK_SECRET=your_webhook_verification_secret_here
ENCRYPTION_KEY=your_encryption_key_for_sensitive_data

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ==========================================
# LOGGING CONFIGURATION
# ==========================================

# Logging
LOG_LEVEL=info
LOG_FILE=logs/app.log
ERROR_LOG_FILE=logs/error.log

# ==========================================
# MONITORING & NOTIFICATIONS
# ==========================================

# Health Check
HEALTH_CHECK_INTERVAL=300000

# Alerts (Optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
EMAIL_SERVICE_API_KEY=YOUR_EMAIL_SERVICE_API_KEY

# ==========================================
# COMMUNITY CONFIGURATION
# ==========================================

# Default Communities (Pre-configured in contract)
DEFAULT_COMMUNITY_FONDJOMENKWET=1
DEFAULT_COMMUNITY_BANJA=2
DEFAULT_COMMUNITY_BAFOUKA=3

# Contract Constants
INITIAL_BAFOKA_AMOUNT=1000
MIN_SERVICE_PRICE=10
MAX_SERVICE_PRICE=10000
BACKER_COMMISSION_RATE=5

# ==========================================
# DEVELOPMENT & TESTING
# ==========================================

# Testing
TEST_DATABASE_URL=postgresql://username:password@localhost:5432/bafoka_test_db
TEST_PRIVATE_KEY=your_test_private_key_here
TEST_WALLET_ADDRESS=your_test_wallet_address_here

# Mock Services (for testing)
MOCK_WHATSAPP=false
MOCK_BLOCKCHAIN=false

# Debug
DEBUG=bafoka:*
VERBOSE_LOGGING=false

# ==========================================
# PERFORMANCE TUNING
# ==========================================

# Connection Pools
DB_POOL_MIN=2
DB_POOL_MAX=10
REDIS_POOL_MAX=10

# Timeouts (milliseconds)
REQUEST_TIMEOUT=30000
DB_TIMEOUT=10000
BLOCKCHAIN_TIMEOUT=60000

# Retry Configuration
MAX_RETRIES=3
RETRY_DELAY=1000

# ==========================================
# SECURITY NOTES
# ==========================================

# IMPORTANT SECURITY REMINDERS:
# 1. Never commit this file with real values to version control
# 2. Keep private keys secure and rotate them regularly
# 3. Use environment-specific values for different deployments
# 4. Enable 2FA on all service accounts
# 5. Regularly audit and update API keys
# 6. Use least-privilege access for all services

# ==========================================
# DEPLOYMENT SPECIFIC
# ==========================================

# For production, also consider:
# - Using managed services for databases
# - Implementing secrets management (AWS Secrets Manager, Azure Key Vault, etc.)
# - Setting up proper monitoring and alerting
# - Configuring proper backup and disaster recovery
# - Implementing proper CI/CD pipelines
